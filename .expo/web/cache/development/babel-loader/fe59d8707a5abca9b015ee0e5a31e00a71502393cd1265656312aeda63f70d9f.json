{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nvar startNativeAnimationNextId = 1;\nvar Animation = function () {\n  function Animation() {\n    _classCallCheck(this, Animation);\n  }\n  _createClass(Animation, [{\n    key: \"start\",\n    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {}\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.__nativeId) {\n        NativeAnimatedHelper.API.stopAnimation(this.__nativeId);\n      }\n    }\n  }, {\n    key: \"__getNativeAnimationConfig\",\n    value: function __getNativeAnimationConfig() {\n      throw new Error('This animation type cannot be offloaded to native');\n    }\n  }, {\n    key: \"__debouncedOnEnd\",\n    value: function __debouncedOnEnd(result) {\n      var onEnd = this.__onEnd;\n      this.__onEnd = null;\n      onEnd && onEnd(result);\n    }\n  }, {\n    key: \"__startNativeAnimation\",\n    value: function __startNativeAnimation(animatedValue) {\n      var startNativeAnimationWaitId = startNativeAnimationNextId + \":startAnimation\";\n      startNativeAnimationNextId += 1;\n      NativeAnimatedHelper.API.setWaitingForIdentifier(startNativeAnimationWaitId);\n      try {\n        animatedValue.__makeNative();\n        this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();\n        NativeAnimatedHelper.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));\n      } catch (e) {\n        throw e;\n      } finally {\n        NativeAnimatedHelper.API.unsetWaitingForIdentifier(startNativeAnimationWaitId);\n      }\n    }\n  }]);\n  return Animation;\n}();\nexport default Animation;","map":{"version":3,"names":["_classCallCheck","_createClass","NativeAnimatedHelper","startNativeAnimationNextId","Animation","key","value","start","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","stop","__nativeId","API","stopAnimation","__getNativeAnimationConfig","Error","__debouncedOnEnd","result","__onEnd","__startNativeAnimation","startNativeAnimationWaitId","setWaitingForIdentifier","__makeNative","generateNewAnimationId","startAnimatingNode","__getNativeTag","bind","e","unsetWaitingForIdentifier"],"sources":["C:/Users/Haiquelcita/Documents/GitHub/GardenEats/node_modules/react-native-web/dist/vendor/react-native/Animated/animations/Animation.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n * @format\r\n */\r\n'use strict';\r\n\r\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\r\nvar startNativeAnimationNextId = 1; // Important note: start() and stop() will only be called at most once.\r\n// Once an animation has been stopped or finished its course, it will\r\n// not be reused.\r\n\r\nclass Animation {\r\n  start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {}\r\n\r\n  stop() {\r\n    if (this.__nativeId) {\r\n      NativeAnimatedHelper.API.stopAnimation(this.__nativeId);\r\n    }\r\n  }\r\n\r\n  __getNativeAnimationConfig() {\r\n    // Subclasses that have corresponding animation implementation done in native\r\n    // should override this method\r\n    throw new Error('This animation type cannot be offloaded to native');\r\n  } // Helper function for subclasses to make sure onEnd is only called once.\r\n\r\n\r\n  __debouncedOnEnd(result) {\r\n    var onEnd = this.__onEnd;\r\n    this.__onEnd = null;\r\n    onEnd && onEnd(result);\r\n  }\r\n\r\n  __startNativeAnimation(animatedValue) {\r\n    var startNativeAnimationWaitId = startNativeAnimationNextId + \":startAnimation\";\r\n    startNativeAnimationNextId += 1;\r\n    NativeAnimatedHelper.API.setWaitingForIdentifier(startNativeAnimationWaitId);\r\n\r\n    try {\r\n      animatedValue.__makeNative();\r\n\r\n      this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();\r\n      NativeAnimatedHelper.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));\r\n    } catch (e) {\r\n      throw e;\r\n    } finally {\r\n      NativeAnimatedHelper.API.unsetWaitingForIdentifier(startNativeAnimationWaitId);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default Animation;"],"mappings":"AASA,YAAY;;AAAC,OAAAA,eAAA;AAAA,OAAAC,YAAA;AAEb,OAAOC,oBAAoB;AAC3B,IAAIC,0BAA0B,GAAG,CAAC;AAAC,IAI7BC,SAAS;EAAA,SAAAA,UAAA;IAAAJ,eAAA,OAAAI,SAAA;EAAA;EAAAH,YAAA,CAAAG,SAAA;IAAAC,GAAA;IAAAC,KAAA,EACb,SAAAC,MAAMC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,iBAAiB,EAAEC,aAAa,EAAE,CAAC;EAAC;IAAAP,GAAA;IAAAC,KAAA,EAEtE,SAAAO,KAAA,EAAO;MACL,IAAI,IAAI,CAACC,UAAU,EAAE;QACnBZ,oBAAoB,CAACa,GAAG,CAACC,aAAa,CAAC,IAAI,CAACF,UAAU,CAAC;MACzD;IACF;EAAC;IAAAT,GAAA;IAAAC,KAAA,EAED,SAAAW,2BAAA,EAA6B;MAG3B,MAAM,IAAIC,KAAK,CAAC,mDAAmD,CAAC;IACtE;EAAC;IAAAb,GAAA;IAAAC,KAAA,EAGD,SAAAa,iBAAiBC,MAAM,EAAE;MACvB,IAAIV,KAAK,GAAG,IAAI,CAACW,OAAO;MACxB,IAAI,CAACA,OAAO,GAAG,IAAI;MACnBX,KAAK,IAAIA,KAAK,CAACU,MAAM,CAAC;IACxB;EAAC;IAAAf,GAAA;IAAAC,KAAA,EAED,SAAAgB,uBAAuBV,aAAa,EAAE;MACpC,IAAIW,0BAA0B,GAAGpB,0BAA0B,GAAG,iBAAiB;MAC/EA,0BAA0B,IAAI,CAAC;MAC/BD,oBAAoB,CAACa,GAAG,CAACS,uBAAuB,CAACD,0BAA0B,CAAC;MAE5E,IAAI;QACFX,aAAa,CAACa,YAAY,CAAC,CAAC;QAE5B,IAAI,CAACX,UAAU,GAAGZ,oBAAoB,CAACwB,sBAAsB,CAAC,CAAC;QAC/DxB,oBAAoB,CAACa,GAAG,CAACY,kBAAkB,CAAC,IAAI,CAACb,UAAU,EAAEF,aAAa,CAACgB,cAAc,CAAC,CAAC,EAAE,IAAI,CAACX,0BAA0B,CAAC,CAAC,EAAE,IAAI,CAACE,gBAAgB,CAACU,IAAI,CAAC,IAAI,CAAC,CAAC;MACnK,CAAC,CAAC,OAAOC,CAAC,EAAE;QACV,MAAMA,CAAC;MACT,CAAC,SAAS;QACR5B,oBAAoB,CAACa,GAAG,CAACgB,yBAAyB,CAACR,0BAA0B,CAAC;MAChF;IACF;EAAC;EAAA,OAAAnB,SAAA;AAAA;AAIH,eAAeA,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}